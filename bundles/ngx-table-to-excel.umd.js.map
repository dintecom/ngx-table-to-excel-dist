{"version":3,"file":"ngx-table-to-excel.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://ngx-table-to-excel/lib/dom-parser.service.ts","ng://ngx-table-to-excel/lib/table-to-excel.service.ts","ng://ngx-table-to-excel/lib/ngx-table-to-excel.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DomParserService {\r\n    /**\r\n     * Parse HTML table to excel worksheet\r\n     * @param ws The worksheet object\r\n     * @param table The table to be converted to excel sheet\r\n     */\r\n    parseDomToTable(ws, htmlElement, opts) {\r\n        let _r, _c, cs, rs, r, c;\r\n        let tableObject = htmlElement.tagName === \"TABLE\";\r\n        if (tableObject) {\r\n          let rows = [...htmlElement.getElementsByTagName(\"tr\")];\r\n          let widths = htmlElement.getAttribute(\"data-cols-width\");\r\n          if (widths) {\r\n            widths = widths.split(\",\").map(function (item) {\r\n              return parseInt(item);\r\n            });\r\n          }\r\n          let merges = [];\r\n          let wsRowCount = ws.rowCount;\r\n          for (_r = 0; _r < rows.length; ++_r) {\r\n            let row = rows[_r];\r\n            r = wsRowCount + _r + 1; // Actual excel row number\r\n            c = 1; // Actual excel col number\r\n            if (row.getAttribute(\"data-exclude\") === \"true\") {\r\n              rows.splice(_r, 1);\r\n              _r--;\r\n              continue;\r\n            }\r\n            if (row.getAttribute(\"data-height\")) {\r\n              let exRow = ws.getRow(r);\r\n              exRow.height = parseFloat(row.getAttribute(\"data-height\"));\r\n            }\r\n    \r\n            let tds = [...row.children];\r\n            for (_c = 0; _c < tds.length; ++_c) {\r\n              let td = tds[_c];\r\n              if (td.getAttribute(\"data-exclude\") === \"true\") {\r\n                tds.splice(_c, 1);\r\n                _c--;\r\n                continue;\r\n              }\r\n              for (let _m = 0; _m < merges.length; ++_m) {\r\n                var m = merges[_m];\r\n                if (m.s.c == c && m.s.r <= r && r <= m.e.r) {\r\n                  c = m.e.c + 1;\r\n                  _m = -1;\r\n                }\r\n              }\r\n              let exCell = ws.getCell(this.getColumnAddress(c, r));\r\n              // calculate merges\r\n              cs = parseInt(td.getAttribute(\"colspan\")) || 1;\r\n              rs = parseInt(td.getAttribute(\"rowspan\")) || 1;\r\n              if (cs > 1 || rs > 1) {\r\n                merges.push({\r\n                  s: { c: c, r: r },\r\n                  e: { c: c + cs - 1, r: r + rs - 1 }\r\n                });\r\n              }\r\n              c += cs;\r\n              exCell.value = this.getValue(td, tableObject);\r\n              if (!opts.autoStyle) {\r\n                let styles = this.getStylesDataAttr(td);\r\n                exCell.font = styles.font || null;\r\n                exCell.alignment = styles.alignment || null;\r\n                exCell.border = styles.border || null;\r\n                exCell.fill = styles.fill || null;\r\n                exCell.numFmt = styles.numFmt || null;\r\n                //Auto-detecting currency\r\n                if (exCell.numFmt == null && typeof exCell.value == \"string\") {\r\n                  let cellValueWithoutSpaces = exCell.value.replace(/ /g, '').replace(/\\,/g, '');\r\n                  const regex = /^(\\+|\\-)?\\$[0-9]+(\\.[0-9]{1,2})?$/;\r\n                  if (regex.test(cellValueWithoutSpaces)) {\r\n                    exCell.value = exCell.value.replace(/[^0-9\\+\\-\\.]/g, \"\")\r\n                    exCell.value = Number(exCell.value);\r\n                    exCell.numFmt = \"$#,##0.00\";\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          //Setting column width\r\n          if (widths) {\r\n            widths.forEach((width, _i) => {\r\n              ws.columns[_i].width = width;\r\n            });\r\n          }\r\n          this.applyMerges(ws, merges);\r\n          return ws;\r\n        }\r\n        else {\r\n          let widths = htmlElement.getAttribute(\"data-cols-width\");\r\n          if (widths) {\r\n            widths = widths.split(\",\").map(function (item) {\r\n              return parseInt(item);\r\n            });\r\n          }\r\n          let merges = [];\r\n          _r = 0;\r\n          let row = htmlElement;\r\n          r = ws.rowCount + _r + 1; // Actual excel row number\r\n          c = 1; // Actual excel col number\r\n          if (row.getAttribute(\"data-exclude\") === \"true\") {\r\n            return ws;\r\n          }\r\n          if (row.getAttribute(\"data-height\")) {\r\n            let exRow = ws.getRow(r);\r\n            exRow.height = parseFloat(row.getAttribute(\"data-height\"));\r\n          }\r\n    \r\n          for (let _m = 0; _m < merges.length; ++_m) {\r\n            var m = merges[_m];\r\n            if (m.s.c == c && m.s.r <= r && r <= m.e.r) {\r\n              c = m.e.c + 1;\r\n              _m = -1;\r\n            }\r\n          }\r\n          let exCell = ws.getCell(this.getColumnAddress(c, r));\r\n          // calculate merges\r\n          cs = parseInt(row.getAttribute(\"colspan\")) || 1;\r\n          rs = parseInt(row.getAttribute(\"rowspan\")) || 1;\r\n          if (cs > 1 || rs > 1) {\r\n            merges.push({\r\n              s: { c: c, r: r },\r\n              e: { c: c + cs - 1, r: r + rs - 1 }\r\n            });\r\n          }\r\n          c += cs;\r\n          exCell.value = this.getValue(row, tableObject);\r\n          if (!opts.autoStyle) {\r\n            let styles = this.getStylesDataAttr(row);\r\n            exCell.font = styles.font || null;\r\n            exCell.alignment = styles.alignment || null;\r\n            exCell.border = styles.border || null;\r\n            exCell.fill = styles.fill || null;\r\n            exCell.numFmt = styles.numFmt || null;\r\n            //Auto-detecting currency\r\n            if (exCell.numFmt == null && typeof exCell.value == \"string\") {\r\n              let cellValueWithoutSpaces = exCell.value.replace(/ /g, '').replace(/\\,/g, '');\r\n              const regex = /^(\\+|\\-)?\\$[0-9]+(\\.[0-9]{1,2})?$/;\r\n              if (regex.test(cellValueWithoutSpaces)) {\r\n                exCell.value = exCell.value.replace(/[^0-9\\+\\-\\.]/g, \"\")\r\n                exCell.value = Number(exCell.value);\r\n                exCell.numFmt = \"$#,##0.00\";\r\n              }\r\n            }\r\n          }\r\n          //Setting column width\r\n          if (widths)\r\n            widths.forEach((width, _i) => {\r\n              ws.columns[_i].width = width;\r\n            });\r\n          this.applyMerges(ws, merges);\r\n          return ws;\r\n        }\r\n      };\r\n\r\n      /**\r\n     * To apply merges on the sheet\r\n     * @param ws The worksheet object\r\n     * @param merges array of merges\r\n     */\r\n    applyMerges(ws, merges) {\r\n        merges.forEach(m => {\r\n          ws.mergeCells(\r\n            this.getExcelColumnName(m.s.c) +\r\n            m.s.r +\r\n            \":\" +\r\n            this.getExcelColumnName(m.e.c) +\r\n            m.e.r\r\n          );\r\n        });\r\n      };\r\n\r\n      /**\r\n     * Takes a positive integer and returns the corresponding column name.\r\n     * @param num The positive integer to convert to a column name.\r\n     * @return The column name.\r\n     */\r\n    getExcelColumnName(num: number): string {\r\n        for (var ret = \"\", a = 1, b = 26; (num -= a) >= 0; a = b, b *= 26) {\r\n          ret = String.fromCharCode(Math.trunc((num % b) / a) + 65) + ret;\r\n        }\r\n        return ret;\r\n      };\r\n    \r\n      getColumnAddress(col, row) {\r\n        return this.getExcelColumnName(col) + row;\r\n      };\r\n\r\n      /**\r\n     * Checks the data type specified and converts the value to it.\r\n     */\r\n    getValue(td, tableObject) {\r\n        let dataType = td.getAttribute(\"data-t\");\r\n        let rawVal = tableObject ? this.htmldecode(td.innerHTML) : td.innerText;\r\n        if (dataType) {\r\n          let val;\r\n          switch (dataType) {\r\n            case \"n\": //number\r\n              rawVal = rawVal.replace(/[^0-9\\+\\-\\.]/g, \"\")\r\n              val = Number(rawVal);\r\n              break;\r\n            case \"d\": //date\r\n              val = new Date(rawVal);\r\n              break;\r\n            case \"b\": //boolean\r\n              val =\r\n                rawVal.toLowerCase() === \"true\"\r\n                  ? true\r\n                  : rawVal.toLowerCase() === \"false\"\r\n                    ? false\r\n                    : Boolean(parseInt(rawVal));\r\n              break;\r\n            default:\r\n              val = rawVal;\r\n          }\r\n          return val;\r\n        } else if (td.getAttribute(\"data-hyperlink\")) {\r\n          return {\r\n            text: rawVal,\r\n            hyperlink: td.getAttribute(\"data-hyperlink\")\r\n          };\r\n        } else if (td.getAttribute(\"data-error\")) {\r\n          return { error: td.getAttribute(\"data-error\") };\r\n        }\r\n        return rawVal;\r\n      };\r\n\r\n      /**\r\n     * Convert HTML to plain text\r\n     */\r\n    htmldecode(str) {\r\n        let entities = [\r\n            [\"nbsp\", \" \"],\r\n            [\"middot\", \"Â·\"],\r\n            [\"quot\", '\"'],\r\n            [\"apos\", \"'\"],\r\n            [\"gt\", \">\"],\r\n            [\"lt\", \"<\"],\r\n            [\"amp\", \"&\"]\r\n          ].map(function (x) {\r\n            return [new RegExp(\"&\" + x[0] + \";\", \"g\"), x[1]];\r\n          });\r\n\r\n        let o = str\r\n          .trim()\r\n          .replace(/\\s+/g, \" \")\r\n          .replace(/<\\s*[bB][rR]\\s*\\/?>/g, \"\\n\")\r\n          .replace(/<[^>]*>/g, \"\");\r\n        for (let i = 0; i < entities.length; ++i)\r\n          o = o.replace(entities[i][0], entities[i][1]);\r\n        return o;\r\n      };\r\n\r\n      /**\r\n     * Convert computed colors to hex ARGB\r\n     * @param computedColor Computed color string from getPropertyValue()\r\n     */\r\n    getHexArgbColor(computedColor: string) {\r\n        //if RGB then convert to RGBA\r\n        let computedColorStr = computedColor;\r\n        if (computedColorStr.indexOf('a') == -1) {\r\n          computedColorStr = computedColorStr.replace(')', ', 1)').replace('rgb', 'rgba');\r\n        }\r\n    \r\n        let rgbaValues = computedColorStr.split(\"(\")[1].split(\")\")[0].split(\",\");\r\n    \r\n        let r = (+rgbaValues[0]).toString(16),\r\n          g = (+rgbaValues[1]).toString(16),\r\n          b = (+rgbaValues[2]).toString(16),\r\n          a = Math.round(+rgbaValues[3] * 255).toString(16);\r\n    \r\n        if (a == '0') { return \"\" }\r\n    \r\n        if (r.length == 1)\r\n          r = \"0\" + r;\r\n        if (g.length == 1)\r\n          g = \"0\" + g;\r\n        if (b.length == 1)\r\n          b = \"0\" + b;\r\n        // if (a.length == 1)\r\n        //   a = \"0\" + a;\r\n    \r\n        return \"F\" + r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\r\n      };\r\n\r\n      /**\r\n     * Prepares the style object for a cell using the data attributes\r\n     */\r\n    getStylesDataAttr(td) {\r\n        let cssComputedStyles = window.getComputedStyle(td, null);\r\n        //Font attrs\r\n        let font: any = {};\r\n        if (td.getAttribute(\"data-f-name\"))\r\n          font.name = td.getAttribute(\"data-f-name\");\r\n        if (td.getAttribute(\"data-f-sz\")) font.size = td.getAttribute(\"data-f-sz\");\r\n        if (td.getAttribute(\"data-f-color\")) {\r\n          if (td.getAttribute(\"data-f-color\") != \"none\") {\r\n            font.color = { argb: td.getAttribute(\"data-f-color\") };\r\n          }\r\n        }\r\n        else {\r\n          //Set css color style by default\r\n          let computedColor = cssComputedStyles.getPropertyValue(\"color\");\r\n          let convertedColor = this.getHexArgbColor(computedColor)\r\n          if (convertedColor != \"\") {\r\n            font.color = { argb: convertedColor };\r\n          }\r\n        }\r\n        if (td.getAttribute(\"data-f-bold\") === \"true\") font.bold = true;\r\n        if (td.getAttribute(\"data-f-italic\") === \"true\") font.italic = true;\r\n        if (td.getAttribute(\"data-f-underline\") === \"true\") font.underline = true;\r\n        if (td.getAttribute(\"data-f-strike\") === \"true\") font.strike = true;\r\n    \r\n        // Alignment attrs\r\n        let alignment: any = {};\r\n        if (td.getAttribute(\"data-a-h\"))\r\n          alignment.horizontal = td.getAttribute(\"data-a-h\");\r\n        if (td.getAttribute(\"data-a-v\")) {\r\n          alignment.vertical = td.getAttribute(\"data-a-v\");\r\n        }\r\n        else {\r\n          // By default\r\n          alignment.vertical = \"middle\";\r\n        }\r\n        if (td.getAttribute(\"data-a-wrap\") === \"false\") {\r\n          alignment.wrapText = false;\r\n        }\r\n        else {\r\n          // By default\r\n          alignment.wrapText = true;\r\n        }\r\n        if (td.getAttribute(\"data-a-text-rotation\"))\r\n          alignment.textRotation = td.getAttribute(\"data-a-text-rotation\");\r\n        if (td.getAttribute(\"data-a-indent\"))\r\n          alignment.indent = td.getAttribute(\"data-a-indent\");\r\n        if (td.getAttribute(\"data-a-rtl\") === \"true\")\r\n          alignment.readingOrder = \"rtl\";\r\n    \r\n        // Border attrs\r\n        let border: any = {\r\n          top: {},\r\n          left: {},\r\n          bottom: {},\r\n          right: {}\r\n        };\r\n    \r\n        if (td.getAttribute(\"data-b-a-s\")) {\r\n          if (td.getAttribute(\"data-b-a-s\") != \"none\") {\r\n            let style = td.getAttribute(\"data-b-a-s\");\r\n            border.top.style = style;\r\n            border.left.style = style;\r\n            border.bottom.style = style;\r\n            border.right.style = style;\r\n          }\r\n        }\r\n        else {\r\n          // By default\r\n          border.top.style = \"thin\";\r\n          border.left.style = \"thin\";\r\n          border.bottom.style = \"thin\";\r\n          border.right.style = \"thin\";\r\n        }\r\n        if (td.getAttribute(\"data-b-a-c\")) {\r\n          let color = { argb: td.getAttribute(\"data-b-a-c\") };\r\n          border.top.color = color;\r\n          border.left.color = color;\r\n          border.bottom.color = color;\r\n          border.right.color = color;\r\n        }\r\n        if (td.getAttribute(\"data-b-t-s\")) {\r\n          border.top.style = td.getAttribute(\"data-b-t-s\");\r\n          if (td.getAttribute(\"data-b-t-c\"))\r\n            border.top.color = { argb: td.getAttribute(\"data-b-t-c\") };\r\n        }\r\n        if (td.getAttribute(\"data-b-l-s\")) {\r\n          border.left.style = td.getAttribute(\"data-b-l-s\");\r\n          if (td.getAttribute(\"data-b-l-c\"))\r\n            border.left.color = { argb: td.getAttribute(\"data-b-t-c\") };\r\n        }\r\n        if (td.getAttribute(\"data-b-b-s\")) {\r\n          border.bottom.style = td.getAttribute(\"data-b-b-s\");\r\n          if (td.getAttribute(\"data-b-b-c\"))\r\n            border.bottom.color = { argb: td.getAttribute(\"data-b-t-c\") };\r\n        }\r\n        if (td.getAttribute(\"data-b-r-s\")) {\r\n          border.right.style = td.getAttribute(\"data-b-r-s\");\r\n          if (td.getAttribute(\"data-b-r-c\"))\r\n            border.right.color = { argb: td.getAttribute(\"data-b-t-c\") };\r\n        }\r\n    \r\n        //Fill\r\n        let fill;\r\n        if (td.getAttribute(\"data-fill-color\")) {\r\n          if (td.getAttribute(\"data-fill-color\") != \"none\") {\r\n            fill = {\r\n              type: \"pattern\",\r\n              pattern: \"solid\",\r\n              fgColor: { argb: td.getAttribute(\"data-fill-color\") }\r\n            };\r\n          }\r\n        }\r\n        else {\r\n          //Set css color style by default\r\n          let computedBackgroundColor = cssComputedStyles.getPropertyValue(\"background-color\");\r\n          let convertedBackgroundColor = this.getHexArgbColor(computedBackgroundColor)\r\n          if (convertedBackgroundColor != \"\") {\r\n            fill = {\r\n              type: \"pattern\",\r\n              pattern: \"solid\",\r\n              fgColor: { argb: convertedBackgroundColor }\r\n            };\r\n          }\r\n        }\r\n    \r\n        //number format\r\n        let numFmt;\r\n        if (td.getAttribute(\"data-num-fmt\"))\r\n          numFmt = td.getAttribute(\"data-num-fmt\");\r\n    \r\n        return {\r\n          font,\r\n          alignment,\r\n          border,\r\n          fill,\r\n          numFmt\r\n        };\r\n      };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { DomParserService } from \"./dom-parser.service\";\nimport saveAs from 'file-saver';\nimport ExcelJS from 'exceljs/dist/es5/exceljs.browser';\n\n@Injectable()\nexport class TableToExcelService {\n\n  constructor(private readonly parser: DomParserService) {}\n\n  initWorkBook() {\n    let wb = new ExcelJS.Workbook();\n    return wb;\n  };\n\n  initSheet(wb, sheetName) {\n    let ws = wb.addWorksheet(sheetName);\n    return ws;\n  };\n\n  save(wb, fileName) {\n    wb.xlsx.writeBuffer().then(function(buffer) {\n      saveAs(\n        new Blob([buffer], { type: \"application/octet-stream\" }),\n        fileName\n      );\n    });\n  };\n\n  tableToSheet(wb, table, opts) {\n    let ws = this.initSheet(wb, opts.sheet.name);\n    ws = this.parser.parseDomToTable(ws, table, opts);\n    return wb;\n  };\n\n  tableToBook(table, opts) {\n    let wb = this.initWorkBook();\n    wb = this.tableToSheet(wb, table, opts);\n    return wb;\n  };\n\n  convert(table, opts: any = {}) {\n    let defaultOpts = {\n      name: \"export.xlsx\",\n      autoStyle: false,\n      sheet: {\n        name: \"Sheet 1\"\n      }\n    };\n    opts = Object.assign({}, defaultOpts, opts);\n    let wb = this.tableToBook(table, opts);\n    this.save(wb, opts.name);\n  };\n}\n","import { NgModule } from '@angular/core';\nimport { DomParserService } from './dom-parser.service';\nimport { TableToExcelService } from './table-to-excel.service';\n\n@NgModule({\n  providers: [\n    DomParserService,\n    TableToExcelService\n  ]\n})\nexport class NgxTableToExcelModule { }\n"],"names":["Injectable","NgModule"],"mappings":"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"}
