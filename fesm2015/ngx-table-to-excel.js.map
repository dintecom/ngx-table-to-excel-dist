{"version":3,"file":"ngx-table-to-excel.js.map","sources":["ng://ngx-table-to-excel/lib/dom-parser.service.ts","ng://ngx-table-to-excel/lib/table-to-excel.service.ts","ng://ngx-table-to-excel/lib/ngx-table-to-excel.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DomParserService {\r\n    /**\r\n     * Parse HTML table to excel worksheet\r\n     * @param ws The worksheet object\r\n     * @param table The table to be converted to excel sheet\r\n     */\r\n    parseDomToTable(ws, htmlElement, opts) {\r\n        let _r, _c, cs, rs, r, c;\r\n        let tableObject = htmlElement.tagName === \"TABLE\";\r\n        if (tableObject) {\r\n          let rows = [...htmlElement.getElementsByTagName(\"tr\")];\r\n          let widths = htmlElement.getAttribute(\"data-cols-width\");\r\n          if (widths) {\r\n            widths = widths.split(\",\").map(function (item) {\r\n              return parseInt(item);\r\n            });\r\n          }\r\n          let merges = [];\r\n          let wsRowCount = ws.rowCount;\r\n          for (_r = 0; _r < rows.length; ++_r) {\r\n            let row = rows[_r];\r\n            r = wsRowCount + _r + 1; // Actual excel row number\r\n            c = 1; // Actual excel col number\r\n            if (row.getAttribute(\"data-exclude\") === \"true\") {\r\n              rows.splice(_r, 1);\r\n              _r--;\r\n              continue;\r\n            }\r\n            if (row.getAttribute(\"data-height\")) {\r\n              let exRow = ws.getRow(r);\r\n              exRow.height = parseFloat(row.getAttribute(\"data-height\"));\r\n            }\r\n    \r\n            let tds = [...row.children];\r\n            for (_c = 0; _c < tds.length; ++_c) {\r\n              let td = tds[_c];\r\n              if (td.getAttribute(\"data-exclude\") === \"true\") {\r\n                tds.splice(_c, 1);\r\n                _c--;\r\n                continue;\r\n              }\r\n              for (let _m = 0; _m < merges.length; ++_m) {\r\n                var m = merges[_m];\r\n                if (m.s.c == c && m.s.r <= r && r <= m.e.r) {\r\n                  c = m.e.c + 1;\r\n                  _m = -1;\r\n                }\r\n              }\r\n              let exCell = ws.getCell(this.getColumnAddress(c, r));\r\n              // calculate merges\r\n              cs = parseInt(td.getAttribute(\"colspan\")) || 1;\r\n              rs = parseInt(td.getAttribute(\"rowspan\")) || 1;\r\n              if (cs > 1 || rs > 1) {\r\n                merges.push({\r\n                  s: { c: c, r: r },\r\n                  e: { c: c + cs - 1, r: r + rs - 1 }\r\n                });\r\n              }\r\n              c += cs;\r\n              exCell.value = this.getValue(td, tableObject);\r\n              if (!opts.autoStyle) {\r\n                let styles = this.getStylesDataAttr(td);\r\n                exCell.font = styles.font || null;\r\n                exCell.alignment = styles.alignment || null;\r\n                exCell.border = styles.border || null;\r\n                exCell.fill = styles.fill || null;\r\n                exCell.numFmt = styles.numFmt || null;\r\n                //Auto-detecting currency\r\n                if (exCell.numFmt == null && typeof exCell.value == \"string\") {\r\n                  let cellValueWithoutSpaces = exCell.value.replace(/ /g, '').replace(/\\,/g, '');\r\n                  const regex = /^(\\+|\\-)?\\$[0-9]+(\\.[0-9]{1,2})?$/;\r\n                  if (regex.test(cellValueWithoutSpaces)) {\r\n                    exCell.value = exCell.value.replace(/[^0-9\\+\\-\\.]/g, \"\")\r\n                    exCell.value = Number(exCell.value);\r\n                    exCell.numFmt = \"$#,##0.00\";\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          //Setting column width\r\n          if (widths) {\r\n            widths.forEach((width, _i) => {\r\n              ws.columns[_i].width = width;\r\n            });\r\n          }\r\n          this.applyMerges(ws, merges);\r\n          return ws;\r\n        }\r\n        else {\r\n          let widths = htmlElement.getAttribute(\"data-cols-width\");\r\n          if (widths) {\r\n            widths = widths.split(\",\").map(function (item) {\r\n              return parseInt(item);\r\n            });\r\n          }\r\n          let merges = [];\r\n          _r = 0;\r\n          let row = htmlElement;\r\n          r = ws.rowCount + _r + 1; // Actual excel row number\r\n          c = 1; // Actual excel col number\r\n          if (row.getAttribute(\"data-exclude\") === \"true\") {\r\n            return ws;\r\n          }\r\n          if (row.getAttribute(\"data-height\")) {\r\n            let exRow = ws.getRow(r);\r\n            exRow.height = parseFloat(row.getAttribute(\"data-height\"));\r\n          }\r\n    \r\n          for (let _m = 0; _m < merges.length; ++_m) {\r\n            var m = merges[_m];\r\n            if (m.s.c == c && m.s.r <= r && r <= m.e.r) {\r\n              c = m.e.c + 1;\r\n              _m = -1;\r\n            }\r\n          }\r\n          let exCell = ws.getCell(this.getColumnAddress(c, r));\r\n          // calculate merges\r\n          cs = parseInt(row.getAttribute(\"colspan\")) || 1;\r\n          rs = parseInt(row.getAttribute(\"rowspan\")) || 1;\r\n          if (cs > 1 || rs > 1) {\r\n            merges.push({\r\n              s: { c: c, r: r },\r\n              e: { c: c + cs - 1, r: r + rs - 1 }\r\n            });\r\n          }\r\n          c += cs;\r\n          exCell.value = this.getValue(row, tableObject);\r\n          if (!opts.autoStyle) {\r\n            let styles = this.getStylesDataAttr(row);\r\n            exCell.font = styles.font || null;\r\n            exCell.alignment = styles.alignment || null;\r\n            exCell.border = styles.border || null;\r\n            exCell.fill = styles.fill || null;\r\n            exCell.numFmt = styles.numFmt || null;\r\n            //Auto-detecting currency\r\n            if (exCell.numFmt == null && typeof exCell.value == \"string\") {\r\n              let cellValueWithoutSpaces = exCell.value.replace(/ /g, '').replace(/\\,/g, '');\r\n              const regex = /^(\\+|\\-)?\\$[0-9]+(\\.[0-9]{1,2})?$/;\r\n              if (regex.test(cellValueWithoutSpaces)) {\r\n                exCell.value = exCell.value.replace(/[^0-9\\+\\-\\.]/g, \"\")\r\n                exCell.value = Number(exCell.value);\r\n                exCell.numFmt = \"$#,##0.00\";\r\n              }\r\n            }\r\n          }\r\n          //Setting column width\r\n          if (widths)\r\n            widths.forEach((width, _i) => {\r\n              ws.columns[_i].width = width;\r\n            });\r\n          this.applyMerges(ws, merges);\r\n          return ws;\r\n        }\r\n      };\r\n\r\n      /**\r\n     * To apply merges on the sheet\r\n     * @param ws The worksheet object\r\n     * @param merges array of merges\r\n     */\r\n    applyMerges(ws, merges) {\r\n        merges.forEach(m => {\r\n          ws.mergeCells(\r\n            this.getExcelColumnName(m.s.c) +\r\n            m.s.r +\r\n            \":\" +\r\n            this.getExcelColumnName(m.e.c) +\r\n            m.e.r\r\n          );\r\n        });\r\n      };\r\n\r\n      /**\r\n     * Takes a positive integer and returns the corresponding column name.\r\n     * @param num The positive integer to convert to a column name.\r\n     * @return The column name.\r\n     */\r\n    getExcelColumnName(num: number): string {\r\n        for (var ret = \"\", a = 1, b = 26; (num -= a) >= 0; a = b, b *= 26) {\r\n          ret = String.fromCharCode(Math.trunc((num % b) / a) + 65) + ret;\r\n        }\r\n        return ret;\r\n      };\r\n    \r\n      getColumnAddress(col, row) {\r\n        return this.getExcelColumnName(col) + row;\r\n      };\r\n\r\n      /**\r\n     * Checks the data type specified and converts the value to it.\r\n     */\r\n    getValue(td, tableObject) {\r\n        let dataType = td.getAttribute(\"data-t\");\r\n        let rawVal = tableObject ? this.htmldecode(td.innerHTML) : td.innerText;\r\n        if (dataType) {\r\n          let val;\r\n          switch (dataType) {\r\n            case \"n\": //number\r\n              rawVal = rawVal.replace(/[^0-9\\+\\-\\.]/g, \"\")\r\n              val = Number(rawVal);\r\n              break;\r\n            case \"d\": //date\r\n              val = new Date(rawVal);\r\n              break;\r\n            case \"b\": //boolean\r\n              val =\r\n                rawVal.toLowerCase() === \"true\"\r\n                  ? true\r\n                  : rawVal.toLowerCase() === \"false\"\r\n                    ? false\r\n                    : Boolean(parseInt(rawVal));\r\n              break;\r\n            default:\r\n              val = rawVal;\r\n          }\r\n          return val;\r\n        } else if (td.getAttribute(\"data-hyperlink\")) {\r\n          return {\r\n            text: rawVal,\r\n            hyperlink: td.getAttribute(\"data-hyperlink\")\r\n          };\r\n        } else if (td.getAttribute(\"data-error\")) {\r\n          return { error: td.getAttribute(\"data-error\") };\r\n        }\r\n        return rawVal;\r\n      };\r\n\r\n      /**\r\n     * Convert HTML to plain text\r\n     */\r\n    htmldecode(str) {\r\n        let entities = [\r\n            [\"nbsp\", \" \"],\r\n            [\"middot\", \"Â·\"],\r\n            [\"quot\", '\"'],\r\n            [\"apos\", \"'\"],\r\n            [\"gt\", \">\"],\r\n            [\"lt\", \"<\"],\r\n            [\"amp\", \"&\"]\r\n          ].map(function (x) {\r\n            return [new RegExp(\"&\" + x[0] + \";\", \"g\"), x[1]];\r\n          });\r\n\r\n        let o = str\r\n          .trim()\r\n          .replace(/\\s+/g, \" \")\r\n          .replace(/<\\s*[bB][rR]\\s*\\/?>/g, \"\\n\")\r\n          .replace(/<[^>]*>/g, \"\");\r\n        for (let i = 0; i < entities.length; ++i)\r\n          o = o.replace(entities[i][0], entities[i][1]);\r\n        return o;\r\n      };\r\n\r\n      /**\r\n     * Convert computed colors to hex ARGB\r\n     * @param computedColor Computed color string from getPropertyValue()\r\n     */\r\n    getHexArgbColor(computedColor: string) {\r\n        //if RGB then convert to RGBA\r\n        let computedColorStr = computedColor;\r\n        if (computedColorStr.indexOf('a') == -1) {\r\n          computedColorStr = computedColorStr.replace(')', ', 1)').replace('rgb', 'rgba');\r\n        }\r\n    \r\n        let rgbaValues = computedColorStr.split(\"(\")[1].split(\")\")[0].split(\",\");\r\n    \r\n        let r = (+rgbaValues[0]).toString(16),\r\n          g = (+rgbaValues[1]).toString(16),\r\n          b = (+rgbaValues[2]).toString(16),\r\n          a = Math.round(+rgbaValues[3] * 255).toString(16);\r\n    \r\n        if (a == '0') { return \"\" }\r\n    \r\n        if (r.length == 1)\r\n          r = \"0\" + r;\r\n        if (g.length == 1)\r\n          g = \"0\" + g;\r\n        if (b.length == 1)\r\n          b = \"0\" + b;\r\n        // if (a.length == 1)\r\n        //   a = \"0\" + a;\r\n    \r\n        return \"F\" + r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\r\n      };\r\n\r\n      /**\r\n     * Prepares the style object for a cell using the data attributes\r\n     */\r\n    getStylesDataAttr(td) {\r\n        let cssComputedStyles = window.getComputedStyle(td, null);\r\n        //Font attrs\r\n        let font: any = {};\r\n        if (td.getAttribute(\"data-f-name\"))\r\n          font.name = td.getAttribute(\"data-f-name\");\r\n        if (td.getAttribute(\"data-f-sz\")) font.size = td.getAttribute(\"data-f-sz\");\r\n        if (td.getAttribute(\"data-f-color\")) {\r\n          if (td.getAttribute(\"data-f-color\") != \"none\") {\r\n            font.color = { argb: td.getAttribute(\"data-f-color\") };\r\n          }\r\n        }\r\n        else {\r\n          //Set css color style by default\r\n          let computedColor = cssComputedStyles.getPropertyValue(\"color\");\r\n          let convertedColor = this.getHexArgbColor(computedColor)\r\n          if (convertedColor != \"\") {\r\n            font.color = { argb: convertedColor };\r\n          }\r\n        }\r\n        if (td.getAttribute(\"data-f-bold\") === \"true\") font.bold = true;\r\n        if (td.getAttribute(\"data-f-italic\") === \"true\") font.italic = true;\r\n        if (td.getAttribute(\"data-f-underline\") === \"true\") font.underline = true;\r\n        if (td.getAttribute(\"data-f-strike\") === \"true\") font.strike = true;\r\n    \r\n        // Alignment attrs\r\n        let alignment: any = {};\r\n        if (td.getAttribute(\"data-a-h\"))\r\n          alignment.horizontal = td.getAttribute(\"data-a-h\");\r\n        if (td.getAttribute(\"data-a-v\")) {\r\n          alignment.vertical = td.getAttribute(\"data-a-v\");\r\n        }\r\n        else {\r\n          // By default\r\n          alignment.vertical = \"middle\";\r\n        }\r\n        if (td.getAttribute(\"data-a-wrap\") === \"false\") {\r\n          alignment.wrapText = false;\r\n        }\r\n        else {\r\n          // By default\r\n          alignment.wrapText = true;\r\n        }\r\n        if (td.getAttribute(\"data-a-text-rotation\"))\r\n          alignment.textRotation = td.getAttribute(\"data-a-text-rotation\");\r\n        if (td.getAttribute(\"data-a-indent\"))\r\n          alignment.indent = td.getAttribute(\"data-a-indent\");\r\n        if (td.getAttribute(\"data-a-rtl\") === \"true\")\r\n          alignment.readingOrder = \"rtl\";\r\n    \r\n        // Border attrs\r\n        let border: any = {\r\n          top: {},\r\n          left: {},\r\n          bottom: {},\r\n          right: {}\r\n        };\r\n    \r\n        if (td.getAttribute(\"data-b-a-s\")) {\r\n          if (td.getAttribute(\"data-b-a-s\") != \"none\") {\r\n            let style = td.getAttribute(\"data-b-a-s\");\r\n            border.top.style = style;\r\n            border.left.style = style;\r\n            border.bottom.style = style;\r\n            border.right.style = style;\r\n          }\r\n        }\r\n        else {\r\n          // By default\r\n          border.top.style = \"thin\";\r\n          border.left.style = \"thin\";\r\n          border.bottom.style = \"thin\";\r\n          border.right.style = \"thin\";\r\n        }\r\n        if (td.getAttribute(\"data-b-a-c\")) {\r\n          let color = { argb: td.getAttribute(\"data-b-a-c\") };\r\n          border.top.color = color;\r\n          border.left.color = color;\r\n          border.bottom.color = color;\r\n          border.right.color = color;\r\n        }\r\n        if (td.getAttribute(\"data-b-t-s\")) {\r\n          border.top.style = td.getAttribute(\"data-b-t-s\");\r\n          if (td.getAttribute(\"data-b-t-c\"))\r\n            border.top.color = { argb: td.getAttribute(\"data-b-t-c\") };\r\n        }\r\n        if (td.getAttribute(\"data-b-l-s\")) {\r\n          border.left.style = td.getAttribute(\"data-b-l-s\");\r\n          if (td.getAttribute(\"data-b-l-c\"))\r\n            border.left.color = { argb: td.getAttribute(\"data-b-t-c\") };\r\n        }\r\n        if (td.getAttribute(\"data-b-b-s\")) {\r\n          border.bottom.style = td.getAttribute(\"data-b-b-s\");\r\n          if (td.getAttribute(\"data-b-b-c\"))\r\n            border.bottom.color = { argb: td.getAttribute(\"data-b-t-c\") };\r\n        }\r\n        if (td.getAttribute(\"data-b-r-s\")) {\r\n          border.right.style = td.getAttribute(\"data-b-r-s\");\r\n          if (td.getAttribute(\"data-b-r-c\"))\r\n            border.right.color = { argb: td.getAttribute(\"data-b-t-c\") };\r\n        }\r\n    \r\n        //Fill\r\n        let fill;\r\n        if (td.getAttribute(\"data-fill-color\")) {\r\n          if (td.getAttribute(\"data-fill-color\") != \"none\") {\r\n            fill = {\r\n              type: \"pattern\",\r\n              pattern: \"solid\",\r\n              fgColor: { argb: td.getAttribute(\"data-fill-color\") }\r\n            };\r\n          }\r\n        }\r\n        else {\r\n          //Set css color style by default\r\n          let computedBackgroundColor = cssComputedStyles.getPropertyValue(\"background-color\");\r\n          let convertedBackgroundColor = this.getHexArgbColor(computedBackgroundColor)\r\n          if (convertedBackgroundColor != \"\") {\r\n            fill = {\r\n              type: \"pattern\",\r\n              pattern: \"solid\",\r\n              fgColor: { argb: convertedBackgroundColor }\r\n            };\r\n          }\r\n        }\r\n    \r\n        //number format\r\n        let numFmt;\r\n        if (td.getAttribute(\"data-num-fmt\"))\r\n          numFmt = td.getAttribute(\"data-num-fmt\");\r\n    \r\n        return {\r\n          font,\r\n          alignment,\r\n          border,\r\n          fill,\r\n          numFmt\r\n        };\r\n      };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { DomParserService } from \"./dom-parser.service\";\nimport saveAs from 'file-saver';\nimport ExcelJS from 'exceljs/dist/es5/exceljs.browser';\n\n@Injectable()\nexport class TableToExcelService {\n\n  constructor(private readonly parser: DomParserService) {}\n\n  initWorkBook() {\n    let wb = new ExcelJS.Workbook();\n    return wb;\n  };\n\n  initSheet(wb, sheetName) {\n    let ws = wb.addWorksheet(sheetName);\n    return ws;\n  };\n\n  save(wb, fileName) {\n    wb.xlsx.writeBuffer().then(function(buffer) {\n      saveAs(\n        new Blob([buffer], { type: \"application/octet-stream\" }),\n        fileName\n      );\n    });\n  };\n\n  tableToSheet(wb, table, opts) {\n    let ws = this.initSheet(wb, opts.sheet.name);\n    ws = this.parser.parseDomToTable(ws, table, opts);\n    return wb;\n  };\n\n  tableToBook(table, opts) {\n    let wb = this.initWorkBook();\n    wb = this.tableToSheet(wb, table, opts);\n    return wb;\n  };\n\n  convert(table, opts: any = {}) {\n    let defaultOpts = {\n      name: \"export.xlsx\",\n      autoStyle: false,\n      sheet: {\n        name: \"Sheet 1\"\n      }\n    };\n    opts = Object.assign({}, defaultOpts, opts);\n    let wb = this.tableToBook(table, opts);\n    this.save(wb, opts.name);\n  };\n}\n","import { NgModule } from '@angular/core';\nimport { DomParserService } from './dom-parser.service';\nimport { TableToExcelService } from './table-to-excel.service';\n\n@NgModule({\n  providers: [\n    DomParserService,\n    TableToExcelService\n  ]\n})\nexport class NgxTableToExcelModule { }\n"],"names":[],"mappings":";;;;;;;;AAAA,MAGa,gBAAgB;;;;;;;;IAMzB,eAAe,CAAC,EAAE,EAAE,WAAW,EAAE,IAAI;;YAC7B,EAAE;;YAAE,EAAE;;YAAE,EAAE;;YAAE,EAAE;;YAAE,CAAC;;YAAE,CAAC;;YACpB,WAAW,GAAG,WAAW,CAAC,OAAO,KAAK,OAAO;QACjD,IAAI,WAAW,EAAE;;gBACX,IAAI,GAAG,CAAC,GAAG,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;;gBAClD,MAAM,GAAG,WAAW,CAAC,YAAY,CAAC,iBAAiB,CAAC;YACxD,IAAI,MAAM,EAAE;gBACV,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG;;;;gBAAC,UAAU,IAAI;oBAC3C,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC;iBACvB,EAAC,CAAC;aACJ;;gBACG,MAAM,GAAG,EAAE;;gBACX,UAAU,GAAG,EAAE,CAAC,QAAQ;YAC5B,KAAK,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;;oBAC/B,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;gBAClB,CAAC,GAAG,UAAU,GAAG,EAAE,GAAG,CAAC,CAAC;gBACxB,CAAC,GAAG,CAAC,CAAC;gBACN,IAAI,GAAG,CAAC,YAAY,CAAC,cAAc,CAAC,KAAK,MAAM,EAAE;oBAC/C,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;oBACnB,EAAE,EAAE,CAAC;oBACL,SAAS;iBACV;gBACD,IAAI,GAAG,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE;;wBAC/B,KAAK,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;oBACxB,KAAK,CAAC,MAAM,GAAG,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC;iBAC5D;;oBAEG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC;gBAC3B,KAAK,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;;wBAC9B,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;oBAChB,IAAI,EAAE,CAAC,YAAY,CAAC,cAAc,CAAC,KAAK,MAAM,EAAE;wBAC9C,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;wBAClB,EAAE,EAAE,CAAC;wBACL,SAAS;qBACV;oBACD,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;;4BACrC,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC;wBAClB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;4BAC1C,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;4BACd,EAAE,GAAG,CAAC,CAAC,CAAC;yBACT;qBACF;;wBACG,MAAM,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;oBAEpD,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC;oBAC/C,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC;oBAC/C,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;wBACpB,MAAM,CAAC,IAAI,CAAC;4BACV,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;4BACjB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;yBACpC,CAAC,CAAC;qBACJ;oBACD,CAAC,IAAI,EAAE,CAAC;oBACR,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC;oBAC9C,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;;4BACf,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC;wBACvC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC;wBAClC,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,IAAI,IAAI,CAAC;wBAC5C,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC;wBACtC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC;wBAClC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC;;wBAEtC,IAAI,MAAM,CAAC,MAAM,IAAI,IAAI,IAAI,OAAO,MAAM,CAAC,KAAK,IAAI,QAAQ,EAAE;;gCACxD,sBAAsB,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;;kCACxE,KAAK,GAAG,mCAAmC;4BACjD,IAAI,KAAK,CAAC,IAAI,CAAC,sBAAsB,CAAC,EAAE;gCACtC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAA;gCACxD,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gCACpC,MAAM,CAAC,MAAM,GAAG,WAAW,CAAC;6BAC7B;yBACF;qBACF;iBACF;aACF;;YAED,IAAI,MAAM,EAAE;gBACV,MAAM,CAAC,OAAO;;;;;gBAAC,CAAC,KAAK,EAAE,EAAE;oBACvB,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;iBAC9B,EAAC,CAAC;aACJ;YACD,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;YAC7B,OAAO,EAAE,CAAC;SACX;aACI;;gBACC,MAAM,GAAG,WAAW,CAAC,YAAY,CAAC,iBAAiB,CAAC;YACxD,IAAI,MAAM,EAAE;gBACV,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG;;;;gBAAC,UAAU,IAAI;oBAC3C,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC;iBACvB,EAAC,CAAC;aACJ;;gBACG,MAAM,GAAG,EAAE;YACf,EAAE,GAAG,CAAC,CAAC;;gBACH,GAAG,GAAG,WAAW;YACrB,CAAC,GAAG,EAAE,CAAC,QAAQ,GAAG,EAAE,GAAG,CAAC,CAAC;YACzB,CAAC,GAAG,CAAC,CAAC;YACN,IAAI,GAAG,CAAC,YAAY,CAAC,cAAc,CAAC,KAAK,MAAM,EAAE;gBAC/C,OAAO,EAAE,CAAC;aACX;YACD,IAAI,GAAG,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE;;oBAC/B,KAAK,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;gBACxB,KAAK,CAAC,MAAM,GAAG,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC;aAC5D;YAED,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;;oBACrC,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC;gBAClB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;oBAC1C,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;oBACd,EAAE,GAAG,CAAC,CAAC,CAAC;iBACT;aACF;;gBACG,MAAM,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;YAEpD,EAAE,GAAG,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC;YAChD,EAAE,GAAG,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC;YAChD,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;gBACpB,MAAM,CAAC,IAAI,CAAC;oBACV,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;oBACjB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;iBACpC,CAAC,CAAC;aACJ;YACD,CAAC,IAAI,EAAE,CAAC;YACR,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;YAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;;oBACf,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC;gBACxC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC;gBAClC,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,IAAI,IAAI,CAAC;gBAC5C,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC;gBACtC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC;gBAClC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC;;gBAEtC,IAAI,MAAM,CAAC,MAAM,IAAI,IAAI,IAAI,OAAO,MAAM,CAAC,KAAK,IAAI,QAAQ,EAAE;;wBACxD,sBAAsB,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;;0BACxE,KAAK,GAAG,mCAAmC;oBACjD,IAAI,KAAK,CAAC,IAAI,CAAC,sBAAsB,CAAC,EAAE;wBACtC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAA;wBACxD,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;wBACpC,MAAM,CAAC,MAAM,GAAG,WAAW,CAAC;qBAC7B;iBACF;aACF;;YAED,IAAI,MAAM;gBACR,MAAM,CAAC,OAAO;;;;;gBAAC,CAAC,KAAK,EAAE,EAAE;oBACvB,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;iBAC9B,EAAC,CAAC;YACL,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;YAC7B,OAAO,EAAE,CAAC;SACX;KACF;;;;;;;;IAOH,WAAW,CAAC,EAAE,EAAE,MAAM;QAClB,MAAM,CAAC,OAAO;;;;QAAC,CAAC;YACd,EAAE,CAAC,UAAU,CACX,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9B,CAAC,CAAC,CAAC,CAAC,CAAC;gBACL,GAAG;gBACH,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CACN,CAAC;SACH,EAAC,CAAC;KACJ;;;;;;;IAOH,kBAAkB,CAAC,GAAW;QAC1B,KAAK,IAAI,GAAG,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE;YACjE,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC;SACjE;QACD,OAAO,GAAG,CAAC;KACZ;;;;;;;IAED,gBAAgB,CAAC,GAAG,EAAE,GAAG;QACvB,OAAO,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;KAC3C;;;;;;;;IAKH,QAAQ,CAAC,EAAE,EAAE,WAAW;;YAChB,QAAQ,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC;;YACpC,MAAM,GAAG,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,SAAS;QACvE,IAAI,QAAQ,EAAE;;gBACR,GAAG;YACP,QAAQ,QAAQ;gBACd,KAAK,GAAG;oBACN,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAA;oBAC5C,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;oBACrB,MAAM;gBACR,KAAK,GAAG;oBACN,GAAG,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC;oBACvB,MAAM;gBACR,KAAK,GAAG;oBACN,GAAG;wBACD,MAAM,CAAC,WAAW,EAAE,KAAK,MAAM;8BAC3B,IAAI;8BACJ,MAAM,CAAC,WAAW,EAAE,KAAK,OAAO;kCAC9B,KAAK;kCACL,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;oBAClC,MAAM;gBACR;oBACE,GAAG,GAAG,MAAM,CAAC;aAChB;YACD,OAAO,GAAG,CAAC;SACZ;aAAM,IAAI,EAAE,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAE;YAC5C,OAAO;gBACL,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,EAAE,CAAC,YAAY,CAAC,gBAAgB,CAAC;aAC7C,CAAC;SACH;aAAM,IAAI,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE;YACxC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,CAAC;SACjD;QACD,OAAO,MAAM,CAAC;KACf;;;;;;;IAKH,UAAU,CAAC,GAAG;;YACN,QAAQ,GAAG;YACX,CAAC,MAAM,EAAE,GAAG,CAAC;YACb,CAAC,QAAQ,EAAE,GAAG,CAAC;YACf,CAAC,MAAM,EAAE,GAAG,CAAC;YACb,CAAC,MAAM,EAAE,GAAG,CAAC;YACb,CAAC,IAAI,EAAE,GAAG,CAAC;YACX,CAAC,IAAI,EAAE,GAAG,CAAC;YACX,CAAC,KAAK,EAAE,GAAG,CAAC;SACb,CAAC,GAAG;;;;QAAC,UAAU,CAAC;YACf,OAAO,CAAC,IAAI,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAClD,EAAC;;YAEA,CAAC,GAAG,GAAG;aACR,IAAI,EAAE;aACN,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;aACpB,OAAO,CAAC,sBAAsB,EAAE,IAAI,CAAC;aACrC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC;YACtC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChD,OAAO,CAAC,CAAC;KACV;;;;;;;IAMH,eAAe,CAAC,aAAqB;;;YAE7B,gBAAgB,GAAG,aAAa;QACpC,IAAI,gBAAgB,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE;YACvC,gBAAgB,GAAG,gBAAgB,CAAC,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;SACjF;;YAEG,UAAU,GAAG,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;;YAEpE,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC;;YACnC,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC;;YACjC,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC;;YACjC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC;QAEnD,IAAI,CAAC,IAAI,GAAG,EAAE;YAAE,OAAO,EAAE,CAAA;SAAE;QAE3B,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC;YACf,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC;YACf,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC;YACf,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;;;QAId,OAAO,GAAG,GAAG,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;KAClE;;;;;;;IAKH,iBAAiB,CAAC,EAAE;;YACZ,iBAAiB,GAAG,MAAM,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC;;;YAErD,IAAI,GAAQ,EAAE;QAClB,IAAI,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC;YAChC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;QAC7C,IAAI,EAAE,CAAC,YAAY,CAAC,WAAW,CAAC;YAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QAC3E,IAAI,EAAE,CAAC,YAAY,CAAC,cAAc,CAAC,EAAE;YACnC,IAAI,EAAE,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,MAAM,EAAE;gBAC7C,IAAI,CAAC,KAAK,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,YAAY,CAAC,cAAc,CAAC,EAAE,CAAC;aACxD;SACF;aACI;;;gBAEC,aAAa,GAAG,iBAAiB,CAAC,gBAAgB,CAAC,OAAO,CAAC;;gBAC3D,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;YACxD,IAAI,cAAc,IAAI,EAAE,EAAE;gBACxB,IAAI,CAAC,KAAK,GAAG,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC;aACvC;SACF;QACD,IAAI,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,MAAM;YAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAChE,IAAI,EAAE,CAAC,YAAY,CAAC,eAAe,CAAC,KAAK,MAAM;YAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACpE,IAAI,EAAE,CAAC,YAAY,CAAC,kBAAkB,CAAC,KAAK,MAAM;YAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAC1E,IAAI,EAAE,CAAC,YAAY,CAAC,eAAe,CAAC,KAAK,MAAM;YAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;;;YAGhE,SAAS,GAAQ,EAAE;QACvB,IAAI,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC;YAC7B,SAAS,CAAC,UAAU,GAAG,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;QACrD,IAAI,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE;YAC/B,SAAS,CAAC,QAAQ,GAAG,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;SAClD;aACI;;YAEH,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC/B;QACD,IAAI,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,OAAO,EAAE;YAC9C,SAAS,CAAC,QAAQ,GAAG,KAAK,CAAC;SAC5B;aACI;;YAEH,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC;SAC3B;QACD,IAAI,EAAE,CAAC,YAAY,CAAC,sBAAsB,CAAC;YACzC,SAAS,CAAC,YAAY,GAAG,EAAE,CAAC,YAAY,CAAC,sBAAsB,CAAC,CAAC;QACnE,IAAI,EAAE,CAAC,YAAY,CAAC,eAAe,CAAC;YAClC,SAAS,CAAC,MAAM,GAAG,EAAE,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;QACtD,IAAI,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,MAAM;YAC1C,SAAS,CAAC,YAAY,GAAG,KAAK,CAAC;;;YAG7B,MAAM,GAAQ;YAChB,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,EAAE;YACR,MAAM,EAAE,EAAE;YACV,KAAK,EAAE,EAAE;SACV;QAED,IAAI,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE;YACjC,IAAI,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,MAAM,EAAE;;oBACvC,KAAK,GAAG,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC;gBACzC,MAAM,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;gBACzB,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBAC1B,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;gBAC5B,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;aAC5B;SACF;aACI;;YAEH,MAAM,CAAC,GAAG,CAAC,KAAK,GAAG,MAAM,CAAC;YAC1B,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;YAC3B,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC;YAC7B,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;SAC7B;QACD,IAAI,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE;;gBAC7B,KAAK,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE;YACnD,MAAM,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;YACzB,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YAC1B,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;YAC5B,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;SAC5B;QACD,IAAI,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE;YACjC,MAAM,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;YACjD,IAAI,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC;gBAC/B,MAAM,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,CAAC;SAC9D;QACD,IAAI,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE;YACjC,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;YAClD,IAAI,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC;gBAC/B,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,CAAC;SAC/D;QACD,IAAI,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE;YACjC,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;YACpD,IAAI,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC;gBAC/B,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,CAAC;SACjE;QACD,IAAI,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE;YACjC,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;YACnD,IAAI,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC;gBAC/B,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,CAAC;SAChE;;;YAGG,IAAI;QACR,IAAI,EAAE,CAAC,YAAY,CAAC,iBAAiB,CAAC,EAAE;YACtC,IAAI,EAAE,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,MAAM,EAAE;gBAChD,IAAI,GAAG;oBACL,IAAI,EAAE,SAAS;oBACf,OAAO,EAAE,OAAO;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,YAAY,CAAC,iBAAiB,CAAC,EAAE;iBACtD,CAAC;aACH;SACF;aACI;;;gBAEC,uBAAuB,GAAG,iBAAiB,CAAC,gBAAgB,CAAC,kBAAkB,CAAC;;gBAChF,wBAAwB,GAAG,IAAI,CAAC,eAAe,CAAC,uBAAuB,CAAC;YAC5E,IAAI,wBAAwB,IAAI,EAAE,EAAE;gBAClC,IAAI,GAAG;oBACL,IAAI,EAAE,SAAS;oBACf,OAAO,EAAE,OAAO;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,wBAAwB,EAAE;iBAC5C,CAAC;aACH;SACF;;;YAGG,MAAM;QACV,IAAI,EAAE,CAAC,YAAY,CAAC,cAAc,CAAC;YACjC,MAAM,GAAG,EAAE,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QAE3C,OAAO;YACL,IAAI;YACJ,SAAS;YACT,MAAM;YACN,IAAI;YACJ,MAAM;SACP,CAAC;KACH;;;;YA5aN,UAAU;;;;;;;ACFX,MAMa,mBAAmB;;;;IAE9B,YAA6B,MAAwB;QAAxB,WAAM,GAAN,MAAM,CAAkB;KAAI;;;;IAEzD,YAAY;;YACN,EAAE,GAAG,IAAI,OAAO,CAAC,QAAQ,EAAE;QAC/B,OAAO,EAAE,CAAC;KACX;;;;;;;IAED,SAAS,CAAC,EAAE,EAAE,SAAS;;YACjB,EAAE,GAAG,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC;QACnC,OAAO,EAAE,CAAC;KACX;;;;;;;IAED,IAAI,CAAC,EAAE,EAAE,QAAQ;QACf,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI;;;;QAAC,UAAS,MAAM;YACxC,MAAM,CACJ,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,0BAA0B,EAAE,CAAC,EACxD,QAAQ,CACT,CAAC;SACH,EAAC,CAAC;KACJ;;;;;;;;IAED,YAAY,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI;;YACtB,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAC5C,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAClD,OAAO,EAAE,CAAC;KACX;;;;;;;IAED,WAAW,CAAC,KAAK,EAAE,IAAI;;YACjB,EAAE,GAAG,IAAI,CAAC,YAAY,EAAE;QAC5B,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC;KACX;;;;;;;IAED,OAAO,CAAC,KAAK,EAAE,OAAY,EAAE;;YACvB,WAAW,GAAG;YAChB,IAAI,EAAE,aAAa;YACnB,SAAS,EAAE,KAAK;YAChB,KAAK,EAAE;gBACL,IAAI,EAAE,SAAS;aAChB;SACF;QACD,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;;YACxC,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;KAC1B;;;;YA/CF,UAAU;;;;YAJF,gBAAgB;;;;;;;ACDzB,MAUa,qBAAqB;;;YANjC,QAAQ,SAAC;gBACR,SAAS,EAAE;oBACT,gBAAgB;oBAChB,mBAAmB;iBACpB;aACF;;;;;;;;;;;;;;;"}
